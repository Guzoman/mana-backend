version: "3.9"

# Red externa compartida donde ya est√° mana-pg
networks:
  mana-net:
    external: true

volumes:
  flowise_data:
  pgdata:

services:
  # ===== FLOWISE (AI Chat Engine) =====
  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Port
      PORT: 3000
      
      # Database - PostgreSQL
      DATABASE_TYPE: postgres
      DATABASE_HOST: mana-pg
      DATABASE_PORT: 5432
      DATABASE_NAME: mana
      DATABASE_USER: mana
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: false

      # Security
      SECRETKEY_STORAGE_TYPE: local
      SECRETKEY_PATH: /root/.flowise
      
      # Custom Tool Dependencies para Custom Functions
      TOOL_FUNCTION_EXTERNAL_DEP: axios,pg,@getzep/zep-js
      
      # CORS - Para el nuevo dominio
      FLOWISE_CORS_ORIGINS: https://manaproject.app,https://${LOVABLE_PREVIEW_DOMAIN}
      
      # Logging
      LOG_PATH: /root/.flowise/logs
      LOG_LEVEL: info
      
      # Disable telemetry
      DISABLE_FLOWISE_TELEMETRY: true
    volumes:
      - flowise_data:/root/.flowise
    networks:
      - mana-net
    depends_on:
      mana-pg:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/api/v1/ping"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 30s

  # ===== POSTGRESQL DATABASE =====
  mana-pg:
    image: postgres:15-alpine
    container_name: mana-pg
    restart: unless-stopped
    environment:
      POSTGRES_DB: mana
      POSTGRES_USER: mana
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    expose:
      - "5432"
    networks:
      - mana-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mana -d mana"]
      interval: 10s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges:true
    user: postgres

  # ===== AUTH BFF (Node.js + WebAuthn + RPC) =====
  auth-bff:
    build: ./auth-bff
    container_name: auth-bff
    restart: unless-stopped
    environment:
      # Domain & Security
      RP_ID: manaproject.app
      ORIGIN: https://manaproject.app
      JWT_SECRET: ${JWT_SECRET}
      JWT_TTL: ${JWT_TTL:-3600}
      
      # Database connection
      DATABASE_HOST: mana-pg
      DATABASE_PORT: 5432
      DATABASE_NAME: mana
      DATABASE_USER: mana
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: false
      
      # Flowise internal connection
      FLOWISE_URL: http://flowise:3000
      
      # CORS configuration
      CORS_ORIGINS: https://manaproject.app,https://${LOVABLE_PREVIEW_DOMAIN}
      
      # Postmark Email
      POSTMARK_API_KEY: ${POSTMARK_API_KEY}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@manaproject.app}
    expose:
      - "3000"
    networks:
      - mana-net
    depends_on:
      mana-pg:
        condition: service_healthy
      flowise:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:3000/health"]
      interval: 15s
      timeout: 5s
      retries: 5

 # ===== REVERSE PROXY (NGINX) =====
 reverse-proxy:
 image: nginx:alpine
 container_name: reverse-proxy
 restart: unless-stopped
 ports:
 - 80:80
 - 443:443
 volumes:
 - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
 - /etc/letsencrypt/live/manaproject.app/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
 - /etc/letsencrypt/live/manaproject.app/privkey.pem:/etc/nginx/certs/privkey.pem:ro
 - ./nginx/acme:/var/www/acme:ro
 depends_on:
 - auth-bff
 networks:
 - mana-net
 healthcheck:
 test: [CMD, wget, -qO-, http://localhost/health]
 interval: 15s
 timeout: 5s
 retries: 3
